{"version":3,"sources":["config/i18n.ts","interfaces/index.ts","components/github-corner/index.tsx","config/index.ts","components/poker-item.tsx","poker/poker-coder/en/joker.ts","poker/poker-coder/en/spade.ts","poker/poker-coder/en/heart.ts","poker/poker-coder/en/club.ts","poker/poker-coder/en/diamond.ts","poker/poker-coder/en/index.ts","poker/poker-coder/cn/joker.ts","poker/poker-coder/cn/spade.ts","poker/poker-coder/cn/heart.ts","poker/poker-coder/cn/club.ts","poker/poker-coder/cn/diamond.ts","poker/poker-coder/cn/index.ts","poker/poker-second/en/joker.ts","poker/poker-second/en/index.ts","poker/poker-second/cn/joker.ts","poker/poker-second/cn/index.ts","poker/index.ts","store/poker/actions.ts","store/poker/types.ts","views/app-dashboard/toolbox/index.tsx","store/i18n/actions.ts","store/i18n/types.ts","views/app-dashboard/billboard/index.tsx","components/card-icon-svg/index.tsx","components/poker-container.tsx","api/index.ts","views/app-dashboard/index.tsx","views/App.tsx","store/i18n/reducers.ts","store/poker/reducers.ts","store/index.ts","serviceWorker.ts","index.tsx"],"names":["i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","CardKey","GithubCorner","href","className","aria-label","target","width","height","viewBox","aria-hidden","d","fill","CardKeyAlias","CardSuit","UserGender","CardSuitAlias","SidebarType","QINIU_CDN_URL","JokerCards","key","BigJoker","type","Jokers","coder","gender","Male","picture","milestone","year","event","quote","LittleJoker","Other","SpadeCards","Ace","Spades","Female","Two","Three","Four","Five","Six","Seven","Eight","Nine","Ten","Jack","Queen","King","HeartCards","Hearts","ClubCards","Clubs","DiamondCards","Diamonds","loadPokerList","lng","collection","loadPokerCoder","loadPokerSecond","loadPokerCoderList","pokerCoder","pokerCoderCn","loadPokerSecondList","pokerSecond","pokerSecondCn","receivePoker","list","payload","useStyles","makeStyles","theme","createStyles","gridRoot","margin","padding","flexGrow","breakpoints","up","btnRoot","spacing","ToolboxContainer","connect","i18nReducer","toggleLanguage","dispatch","setLanguage","toggleCollection","setCollection","classes","useTranslation","t","changeCollection","changeLanguage","Grid","container","item","xs","Button","onClick","variant","color","alertRoot","BillboardContainer","Alert","severity","AlertTitle","svg","transform","BigJokersIconSvg","xmlns","x","y","style","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeDashoffset","fontFamily","fontWeight","fontSize","textAnchor","mixBlendMode","LittleJokersIconSvg","SpadesIconSvg","HeartsIconSvg","ClubsIconSvg","DiamondsIconSvg","CardIconSvgSwitcher","cardType","cardKey","renderSvg","root","paddingBottom","position","cardWrap","backgroundColor","textAlign","leftSidebarWrap","left","display","writingMode","rightSidebarWrap","right","iconWrap","bottom","keyText","sidebarText","justifyContent","alignItems","coderTitle","bodyWrap","flexFlow","bodyImg","flex","bodyMedia","bodyMilestone","flexDirection","minHeight","marginBottom","bodyGridWrap","textLeft","textRight","bodyQuote","fontStyle","SidebarWrap","poker","direction","Left","BodyWrap","CardMedia","image","title","map","ms","index","JSON","stringify","PokerItem","Card","Right","gridItem","PokerContainer","pokerReducer","fetchPoker","Promise","resolve","success","data","getPoker","then","catch","useEffect","sm","md","AppDashboard","Container","App","fallback","state","actions","loading","rootReducer","combineReducers","loggerMiddleware","createLogger","Boolean","window","location","hostname","match","store","middleWares","thunkMiddleware","middleWareEnhancer","applyMiddleware","createStore","composeWithDevTools","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d1b8e58.chunk.js","sourcesContent":["import i18n from \"i18next\"\nimport Backend from 'i18next-xhr-backend'\nimport { initReactI18next } from \"react-i18next\"\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false\n    }\n  })\n\nexport default i18n","export const POKER_CODER = 'POKER_CODER'\nexport const POKER_SECOND = 'POKER_SECOND'\n\nexport const EN = 'EN'\nexport const CN = 'CN'\n\nexport const CardKeyAlias = ['BigJoker', 'LittleJoker', 'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\n\nexport enum CardKey {\n  BigJoker, LittleJoker, Ace, Two, Three, Four, Five, Six, Seven, Eight, Nine, Ten, Jack, Queen, King,\n}\n\nexport const CardSuitAlias = ['Jokers', 'Spades', 'Hearts', 'Clubs', 'Diamonds']\n\nexport enum CardSuit {\n  Jokers, Spades, Hearts, Clubs, Diamonds,\n}\n\nexport enum UserGender {\n  Male,\n  Female,\n  Other,\n}\n\nexport interface PokerCard {\n  key: CardKey\n  type: CardSuit\n  coder: string\n  gender: UserGender\n  picture: string\n  milestone: { year: number, event: string }[]\n  quote: string\n}\n","import React from 'react'\nimport './index.css'\n\nconst GithubCorner: React.FC = () => {\n  return <a \n    href=\"https://github.com/ningowood/poker-coder\"\n    className=\"github-corner\"\n    aria-label=\"View source on GitHub\"\n    target=\"_blank\"\n  >\n    <svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" className=\"svg\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n      <path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" className=\"octo-arm\"></path>\n      <path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path>\n    </svg>\n  </a>\n}\n\nexport default GithubCorner","export const QINIU_CDN_URL = 'http://qiniu.ningo.cloud/'","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Grid from '@material-ui/core/Grid'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardIconSvgSwitcher from './card-icon-svg'\nimport { PokerCard, CardKeyAlias, CardSuitAlias } from '../interfaces'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 0,\n      width: '100%',\n      paddingBottom: '140%',\n      position: 'relative',\n    },\n    cardWrap: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      textAlign: 'center',\n    },\n    leftSidebarWrap: {\n      height: '100%',\n      width: '17%',\n      left: 0,\n      display: 'inline-block',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      writingMode: 'vertical-lr',\n      transform: 'rotate(180deg)',\n    },\n    rightSidebarWrap: {\n      height: '100%',\n      width: '17%',\n      right: 0,\n      display: 'inline-block',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      writingMode: 'vertical-lr',\n    },\n    iconWrap: {\n      position: 'absolute',\n      bottom: '5%',\n    },\n    keyText: {\n      fontSize: '26px',\n      margin: '2px 0',\n      display: 'inline-block',\n      transform: 'rotate(90deg)',\n    },\n    sidebarText: {\n      fontSize: '20px',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      [theme.breakpoints.up('xs')]: {\n        fontSize: '16px',\n      },\n      [theme.breakpoints.up('sm')]: {\n        fontSize: '20px',\n      },\n    },\n    coderTitle: {\n      bottom: '15px',\n      position: 'relative',\n    },\n    bodyWrap: {\n      height: '100%',\n      width: '66%',\n      backgroundColor: '#fff',\n      position: 'absolute',\n      left: '17%',\n      display: 'flex',\n      flexFlow: 'column',\n    },\n    bodyImg: {\n      flex: '1 1 auto',\n      width: '100%',\n      backgroundColor: '#fff',\n      display: 'flex',\n      alignItems: 'center',\n    },\n    bodyMedia: {\n      flex: 1,\n      height: '77%',\n      margin: '0 10px',\n      backgroundColor: 'bisque',\n    },\n    bodyMilestone: {\n      flex: '0 1 auto',\n      width: '100%',\n      backgroundColor: '#fff',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      minHeight: '48px',\n      marginBottom: '10px',\n    },\n    bodyGridWrap: {\n      width: '100%',\n      display: 'table',\n    },\n    year: {\n      fontWeight: 'bold',\n    },\n    textLeft: {\n      textAlign: 'left',\n    },\n    textRight: {\n      textAlign: 'right',\n    },\n    bodyQuote: {\n      flex: '0 1 auto',\n      width: '100%',\n      backgroundColor: '#fff',\n      display: 'flex',\n      alignItems: 'center',\n      minHeight: '36px',\n      marginBottom: '10px',\n      fontStyle: 'italic',\n    },\n  }),\n)\n\ninterface PokerItemProps {\n  poker: PokerCard\n}\n\nenum SidebarType {\n  Left, Right\n}\n\ninterface SidebarProps {\n  direction: SidebarType\n}\n\nconst SidebarWrap: React.FC<PokerItemProps & SidebarProps> = ({ poker, direction }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={direction === SidebarType.Left\n      ? `${classes.leftSidebarWrap}`\n      : `${classes.rightSidebarWrap}`\n    }>\n      <h1 className={classes.sidebarText}>\n        <span className={classes.coderTitle}>{poker.coder}</span>\n        <span className={classes.iconWrap}>\n          <CardIconSvgSwitcher cardType={CardSuitAlias[poker.type]} cardKey={CardKeyAlias[poker.key]}/>\n          {\n            CardSuitAlias[poker.type] === 'Jokers'\n              ? null\n              : <span className={classes.keyText}>{CardKeyAlias[poker.key]}</span>\n          }\n        </span>\n      </h1>\n    </div>\n  )\n}\n\nconst BodyWrap: React.FC<PokerItemProps> = ({ poker }) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.bodyWrap}>\n      <div className={classes.bodyImg}>\n        <CardMedia\n          className={classes.bodyMedia}\n          image={poker.picture}\n          title={poker.coder}\n        />\n      </div>\n      <div className={classes.bodyMilestone}>\n        <div className={classes.bodyGridWrap}>\n          {poker.milestone.map((ms, index) => (\n            <Grid container spacing={1} key={index}>\n              <Grid item xs={3} className={`${classes.textRight} ${classes.year}`}>\n                {ms.year}:\n              </Grid>\n              <Grid item xs={9} className={classes.textLeft}>\n                <span>{ms.event}</span>\n              </Grid>\n            </Grid>\n          ))}\n        </div>\n      </div>\n      <div className={classes.bodyQuote}>\n        {JSON.stringify(poker.quote)}\n      </div>\n    </div>\n  )\n}\n\nconst PokerItem: React.FC<PokerItemProps> = ({ poker }) => {\n  const classes = useStyles()\n\n  return (\n    <Card className={classes.root}>\n      <Card className={classes.cardWrap}>\n        <SidebarWrap poker={poker} direction={SidebarType.Left} />\n        <BodyWrap poker={poker}/>\n        <SidebarWrap poker={poker} direction={SidebarType.Right} />\n      </Card>\n    </Card>\n  )\n}\n\nexport default PokerItem\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst JokerCards: PokerCard[] = [\n  {\n    key: CardKey.BigJoker,\n    type: CardSuit.Jokers,\n    coder: \"David Heinemeier Hansson\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"David_Heinemeier_Hansson.jpg\",\n    milestone: [\n      { year: 2003, event: \"Created Ruby on Rails\" },\n    ],\n    quote: \"If you're not working on your best idea right now, you're doing it wrong.\"\n  },\n  {\n    key: CardKey.LittleJoker,\n    type: CardSuit.Jokers,\n    coder: \"Satoshi Nakamoto\",\n    gender: UserGender.Other,\n    picture: QINIU_CDN_URL + \"Satoshi_Nakamoto.jpg\",\n    milestone: [\n      { year: 2008, event: \"Invented Blockchain\" },\n      { year: 2008, event: \"Designed Bitcoin\" },\n    ],\n    quote: \"With e-currency based on cryptographic proof, without the need to trust a third party middle-man, money can be secure and transactions effortless.\"\n  }\n]\n\nexport default JokerCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst SpadeCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Spades,\n    coder: \"Ada Lovelace\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Ada_Lovelace.jpg\",\n    milestone: [\n      { year: 1843, event: \"Invented computer algorithms\" },\n      { year: 1843, event: \"Wrote the world's first computer program\" },\n    ],\n    quote: \"The Analytical Engine has no pretensions whatever to originate anything. It can do whatever we know how to order it to perform.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Spades,\n    coder: \"Linus Torvalds\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Linus_Torvalds.jpeg\",\n    milestone: [\n      { year: 1991, event: \"Created the Linux operating system\" },\n      { year: 2005, event: \"Created the Git Version control system\" },\n    ],\n    quote: \"Intelligence is the ability to avoid doing work, yet getting the work done.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Spades,\n    coder: \"Bjarne Stroustrup\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Bjarne_Stroustrup.jpg\",\n    milestone: [\n      { year: 1985, event: \"Created the C++ programming language\" },\n    ],\n    quote: \"Legacy code often differs from its suggested alternative by actually working and scaling.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Spades,\n    coder: \"Patricia Sellinger\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Patricia_Sellinger.jpeg\",\n    milestone: [\n      { year: 1974, event: \"Helped create System R, the first implementation of SQL\" },\n    ],\n    quote: \"One of the wonderful things about data management is it includes all of the problems of programming languages, all of the problems of operating systems.\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Spades,\n    coder: \"Tim Berners-Lee\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Tim_Berners-Lee.jpg\",\n    milestone: [\n      { year: 1991, event: \"Invented the World Wide Web\" },\n    ],\n    quote: \"The Web as I envisaged it, we have not seen it yet. The future is still so much bigger than the past.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Spades,\n    coder: \"Richard Stallman\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Richard_Stallman.jpg\",\n    milestone: [\n      { year: 1983, event: \"Developed the GNU operating system\" },\n      { year: 1985, event: \"Founded the Free Software Foundation\" },\n      { year: 1985, event: \"Created the GNU Emacs code editor\" },\n    ],\n    quote: \"Sharing is good. And with digital technology, sharing is easy.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Spades,\n    coder: \"Raymond Kurzweil\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Raymond_Kurzweil.jpg\",\n    milestone: [\n      { year: 1974, event: \"Invented omni-font optical character recognition\" },\n      { year: 1987, event: \"Developed the first commercial text-to-speech synthesizer\" },\n    ],\n    quote: \"Once a computer achieves human intelligence it will necessary roar past it.\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Spades,\n    coder: \"Ken Thompson\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Ken_Thompson.jpg\",\n    milestone: [\n      { year: 1969, event: \"Designed the B programming language\" },\n      { year: 1970, event: \"Co-created the Unix operating\" },\n      { year: 2009, event: \"Co-created the Go programming language\" },\n    ],\n    quote: \"When in doubt, use brute force.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Spades,\n    coder: \"Ray Tomlinson\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Ray_Tomlinson.jpg\",\n    milestone: [\n      { year: 1971, event: \"Invented email\" },\n    ],\n    quote: \"I see email being used, by and large, exactly the way I envisioned. Everybody uses it in di☒erent ways, but they use it in a way they find works for them.\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Spades,\n    coder: \"Mary Allen Wilkes\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Mary_Allen_Wilkes.jpeg\",\n    milestone: [\n      { year: 1961, event: \"Designed interactive operating system LAP6 for the LINC\" },\n      { year: 1965, event: \"First person to build and use a personal computer in the home.\" },\n    ],\n    quote: \"We had the quaint notion that software should be completely, absolutely free of bugs. Unfortunately it's a notion that never really quite caught on.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Spades,\n    coder: \"Edsger Dijkstra\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Edsger_Dijkstra.jpg\",\n    milestone: [\n      { year: 1956, event: \"Invented the Dijkstra Shortest-Path Algorithm\" },\n      { year: 1965, event: \"Created the Dining Philosophers problem\" },\n    ],\n    quote: \"The question of whether computers can think is like the question of whether submarines can swim.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Spades,\n    coder: \"Douglas Engelbart\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Douglas_Engelbart.jpg\",\n    milestone: [\n      { year: 1964, event: \"Invented the mouse\" },\n      { year: 1973, event: \"Helped invent the Graphic User Interface\" },\n    ],\n    quote: \"The better we get at getting better, the faster we will get better.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Spades,\n    coder: \"Konrad Zuse\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Konrad_Zuse.jpg\",\n    milestone: [\n      { year: 1938, event: \"Built the first binary computer\" },\n      { year: 1941, event: \"Built the first programmable digital computer\" },\n      { year: 1945, event: \"Designed the first high-level programming language\" },\n    ],\n    quote: \"You could say I was too lazy to calculate, so I invented the computer.\"\n  },\n]\n\nexport default SpadeCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst HeartCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Hearts,\n    coder: \"Grace Hopper\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Grace_Hopper.jpg\",\n    milestone: [\n      { year: 1945, event: \"Coined the term \\\"bug\\\"\" },\n      { year: 1952, event: \"Invented the compiler\" },\n      { year: 1959, event: \"Helped develop COBOL\" },\n    ],\n    quote: \"When we need greater computer power, the answer is not to get a bigger computer, but to build systems of computers and operate them in parallel.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Hearts,\n    coder: \"Andrew Ng\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Andrew_Ng.jpg\",\n    milestone: [\n      { year: 2007, event: \"Lead the Stanford Artificial Intelligence Robot Project\" },\n      { year: 2008, event: \"Lead the Stanford Autonomous Helicopter Project\" },\n      { year: 2011, event: \"Online Machine Learning Course\" },\n    ],\n    quote: \"Today I actually have a hard time thinking of an industry that I don't think AI will transform in the next several years.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Hearts,\n    coder: \"Corrinne Yu\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Corrinne_Yu.jpg\",\n    milestone: [\n      { year: 1990, event: \"Wrote code for the US Space Shuttle program\" },\n      { year: 1994, event: \"Created her own 3D graphics engines\" },\n      { year: 2008, event: \"Lead development of the Halo game series\" },\n    ],\n    quote: \"Sometimes I cuddle with my code. I grab some code print-outs, surround myself with a few books, hold onto a legal pad, curl up on a couch with a blanket and start reading and scribbling away.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Hearts,\n    coder: \"Brian Fox\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Brian_Fox.png\",\n    milestone: [\n      { year: 1989, event: \"Created the GNU Bash Shell\" },\n      { year: 2008, event: \"Co-authored the OVC open source voting system\" },\n    ],\n    quote: \"I try hard to not 'work' Instead. I try to stay focused on why I'm doing what I do, so that I can truly enjoy the sense of satisfaction when I am finished.\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Hearts,\n    coder: \"Guido Van Rossum\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Guido_Van_Rossum.jpg\",\n    milestone: [\n      { year: 1990, event: \"Created Python\" },\n    ],\n    quote: \"Python is an experiment in how much freedom programmers need. Too much freedom and nobody can read another's code; too little and expressiveness is endangered.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Hearts,\n    coder: \"Larry Wall\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Larry_Wall.jpg\",\n    milestone: [\n      { year: 1985, event: \"Created Patch, a precursor to Git\" },\n      { year: 1987, event: \"Created the Perl programming language\" },\n    ],\n    quote: \"The only reason I've managed to run this open source project is that I have learned to delegate even the delegation to other people.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Hearts,\n    coder: \"Bob Frankston & Dan Bricklin\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Dan_Bricklin_And_Bob_Frankston.jpg\",\n    milestone: [\n      { year: 1979, event: \"Created VisiCalc, the first spreadsheet program\" },\n    ],\n    quote: \"In a good system, just doing what you normally would do to help yourself helps everybody. - Dan Bricklin\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Hearts,\n    coder: \"Adele Goldberg\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Adele_Goldberg.jpg\",\n    milestone: [\n      { year: 1973, event: \"Developed concepts used for Graphic User Interfaces\" },\n      { year: 1980, event: \"Helped develop the Smalltalk-80 programming language\" },\n    ],\n    quote: \"Don't ask whether you can do something, but how to do it.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Hearts,\n    coder: \"Brian Kernighan\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Brian_Kernighan.png\",\n    milestone: [\n      { year: 1970, event: \"Co-created the Unix operating system\" },\n      { year: 1972, event: \"Created the first \\\"Hello World\\\" program\" },\n      { year: 1977, event: \"Co-authored the AWK programming language\" },\n    ],\n    quote: \"Don't comment bad code-rewrite it.\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Hearts,\n    coder: \"Donald Knuth\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Donald_Knuth.jpg\",\n    milestone: [\n      { year: 1973, event: \"Published The Art of Computer programming\" },\n      { year: 1978, event: \"Designed the TeX tyypesetting system\" },\n    ],\n    quote: \"Science is what we understand well enough to explain to a computer. Art is everything else we do.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Hearts,\n    coder: \"Judea Pearl\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Judea_Pearl.png\",\n    milestone: [\n      { year: 1970, event: \"Created the probabilistic approach to artificial intelligence\" },\n      { year: 1985, event: \"Invented Bayesian Networks\" },\n    ],\n    quote: \"The surest kind of knowledge is what you construct yourself.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Hearts,\n    coder: \"John McCarthy\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"John_McCarthy.jpg\",\n    milestone: [\n      { year: 1955, event: \"Coined the term \\\"Artificial Intelligence\\\"\" },\n      { year: 1958, event: \"Created the LISP high-level programming language\" },\n    ],\n    quote: \"Everyone needs computer programming. It will be the way we speak to the servants.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Hearts,\n    coder: \"Maurice Wilkes\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Maurice_Wilkes.png\",\n    milestone: [\n      { year: 1949, event: \"Built EDSAC, the first computer with an internally stored program\" },\n    ],\n    quote: \"A good part of the remainder of my life was going to be spent in finding errors in my own programs.\"\n  },\n]\n\nexport default HeartCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst ClubCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Clubs,\n    coder: \"Ida Rhodes\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Ida_Rhodes.jpeg\",\n    milestone: [\n      { year: 1940, event: \"Worked on Mathematical Tables Project\" },\n      { year: 1950, event: \"Designed the C-10 programming language for the UNIVAC-I(with Betty Holberton)\" },\n    ],\n    quote: \"Whenever I see anyone reading a copy of Science Fiction, I gloat silently over the fact that I get my thrills not vicariously but through actual experience.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Clubs,\n    coder: \"Bram Cohen\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Bram_Cohen.jpg\",\n    milestone: [\n      { year: 2002, event: \"Created the BitTorrent peer-to-peer protocol\" },\n    ],\n    quote: \"You get so tired of having your work die. I just wanted to make something that people would actually use.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Clubs,\n    coder: \"Brendan Eich\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Brendan_Eich.jpg\",\n    milestone: [\n      { year: 1995, event: \"Created JavaScript\" },\n    ],\n    quote: \"If the web can be evolved to include the missing APIs and have better performance, developers won't need to go beyond the web.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Clubs,\n    coder: \"Sophie Wilson\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Sophie_Wilson.jpg\",\n    milestone: [\n      { year: 1978, event: \"Designed the Acorn MicroComputer\" },\n      { year: 1981, event: \"Developed BBC Basic programming language\" },\n    ],\n    quote: \"I'm the rare engineer who says the answer is obviously Z. It makes me a dangerous person to employ in IT but a useful one.\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Clubs,\n    coder: \"James Gosling\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"James_Gosling.jpg\",\n    milestone: [\n      { year: 1995, event: \"Created Java\" },\n    ],\n    quote: \"People think of security as a noun, something you go buy. In reality, it's an abstract concept like happiness.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Clubs,\n    coder: \"Bill Joy\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Bill_Joy.jpg\",\n    milestone: [\n      { year: 1976, event: \"Created the vi editor\" },\n      { year: 1978, event: \"Created the C shell for UNIX\" },\n    ],\n    quote: \"We have to encourage the future we want instead of trying to prevent the future war fear.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Clubs,\n    coder: \"Steve Wozniak\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Steve_Wozniak.jpg\",\n    milestone: [\n      { year: 1977, event: \"Designed the Apple II, the first mass-market microcomputer\" },\n      { year: 1987, event: \"Invented the universal remote control\" },\n    ],\n    quote: \"In the end, I hope there's a little note somewhere that says I designed a good computer.\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Clubs,\n    coder: \"Ward Christensen\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Ward_Christensen.jpg\",\n    milestone: [\n      { year: 1977, event: \"Developed XMODEM, a simple file transfer protocol\" },\n      { year: 1978, event: \"Co-founder of CBBS bulletin board, first bulletin board brought online\" },\n    ],\n    quote: \"I patterned the software after the cork board and push-pins type of bulletin board, and coined the term \\\"BBS\\\" for it.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Clubs,\n    coder: \"Dennis Ritchie\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Dennis_Ritchie.jpg\",\n    milestone: [\n      { year: 1970, event: \"Co-created the Unix operating system\" },\n      { year: 1978, event: \"Designed the C programming language\" },\n    ],\n    quote: \"Unix is basically a simple operating system, but you have to be a genius to understand the simplicity.\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Clubs,\n    coder: \"Dana Ulery\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Dana_Ulery.jpg\",\n    milestone: [\n      { year: 1961, event: \"Pioneered early scientific computing applications\" },\n      { year: 1971, event: \"Established Electronic Data Interchange standards\" },\n    ],\n    quote: \"Knowledge management is about using information to formulate the right problem in the first place, a tremendous and often unrecognized challenge in itself.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Clubs,\n    coder: \"Frances Allen\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Frances_Allen.jpg\",\n    milestone: [\n      { year: 1962, event: \"Designed the compiler for the IBM Stretch, one of the first supercomputers.\" },\n    ],\n    quote: \"A very big step was not only identifying parallelism, but identifying useful parallelism.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Clubs,\n    coder: \"Marvin Minsky\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Marvin_Minsky.jpg\",\n    milestone: [\n      { year: 1951, event: \"Invented the neural network and the first self-learning machine\" },\n      { year: 1963, event: \"Invented the first head-mounted graphical display\" },\n    ],\n    quote: \"No computer has ever been designed that is ever aware of what it's doing; but most of the time, we aren't either.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Clubs,\n    coder: \"Alan Turing\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Alan_Kay.png\",\n    milestone: [\n      { year: 1936, event: \"Invented the Turing Machine\" },\n      { year: 1939, event: \"Developed computers that could crack Nazi encryption\" },\n      { year: 1950, event: \"Invented the Turing Test\" },\n    ],\n    quote: \"We can only see a short distance ahead, but we can see plenty there that needs to be done.\"\n  },\n]\n\nexport default ClubCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst DiamondCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Diamonds,\n    coder: \"Dorothy Vaughan\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Dorothy_Vaughan.png\",\n    milestone: [\n      { year: 1943, event: \"Calculated flight trajectories for the US space program\" },\n      { year: 1961, event: \"Taught her entire staff FORTRAN programming\" },\n    ],\n    quote: \"I Changed What I could, and what I couldn't, I endured.\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Diamonds,\n    coder: \"Parisa Tabriz\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Parisa_Tabriz.jpg\",\n    milestone: [\n      { year: 2016, event: \"Oversees the security of Google Chrome\" },\n      { year: 2018, event: \"Founded Our Security Advocates Conference\" },\n    ],\n    quote: \"It's often harder to consistently write secure code than it is to point out insecure code.\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Diamonds,\n    coder: \"Yukihiro Matsumoto\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Yukihiro_Matsumoto.jpeg\",\n    milestone: [\n      { year: 1995, event: \"Designed the Ruby programming language\" },\n    ],\n    quote: \"I believe consistency and orthogonality are tools of design, not the primary goal in design.\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Diamonds,\n    coder: \"Stephen Wolfram\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Stephen_Wolfram.jpg\",\n    milestone: [\n      { year: 1986, event: \"Developed the Mathematica computer algebra system\" },\n      { year: 1988, event: \"Developed the Wolfram Alpha answer engine\" },\n    ],\n    quote: \"Could it be that some place out there in the computational universe, we might find our physical universe?\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Diamonds,\n    coder: \"Alexey Pajitnov\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Alexey_Pajitnov.jpg\",\n    milestone: [\n      { year: 1984, event: \"Designed and programmed Tetris\" },\n    ],\n    quote: \"Tetris had a very important role in breaking down ordinary people's inhibitions in front of computers.\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Diamonds,\n    coder: \"Phil Zimmermann\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Phil_Zimmermann.jpg\",\n    milestone: [\n      { year: 1991, event: \"Created the Pretty Good Privacy public-key encryption program\" },\n    ],\n    quote: \"If privacy is outlawed, only outlaws will have privacy.\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Diamonds,\n    coder: \"Radia Perlman\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Radia_Perlman.jpg\",\n    milestone: [\n      { year: 1985, event: \"Designed the Spanning Tree Protocol for Ethernet\" },\n    ],\n    quote: \"Start out with finding the right problem to solve.\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Diamonds,\n    coder: \"Andrew Yao\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Andrew_Yao.jpeg\",\n    milestone: [\n      { year: 1997, event: \"Proposed Yao's Minimax Principle, using the minimax theorem\" },\n      { year: 1979, event: \"Introduced theory of communication complexity\" },\n      { year: 1982, event: \"Developed Yao's Millionaires' problem and Yao's Test\" },\n    ],\n    quote: \"If you have something in mind, go ahead with it. Even if you don't make it to the end, you may yet make it further than others.\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Diamonds,\n    coder: \"Vint Cerf & Bob Kahn\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Vint_Cerf_And_Bob_Kahn.png\",\n    milestone: [\n      { year: 1983, event: \"Invented the Transmission Control Protocol\" },\n      { year: 1983, event: \"Invented the Internet Protocol\" },\n    ],\n    quote: \"You don't have to be young to learn about technology. You have to feel young. - Vint Cerf\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Diamonds,\n    coder: \"Alan Kay\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Alan_Kay.png\",\n    milestone: [\n      { year: 1970, event: \"Pioneered use of Object-Oriented Programming\" },\n    ],\n    quote: \"The best way to predict the future is to invent it.\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Diamonds,\n    coder: \"Margaret Hamilton\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Margaret_Hamilton.jpg\",\n    milestone: [\n      { year: 1969, event: \"Lead software development for the Apollo Moon Landing mission\" },\n    ],\n    quote: \"Looking back, we were the luckiest people in the world. There was no choice but to be pioneers.\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Diamonds,\n    coder: \"Jean E. Sammet\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Jean_E._Sammet.png\",\n    milestone: [\n      { year: 1959, event: \"Helped develop the COBOL programming language\" },\n      { year: 1962, event: \"Developed the FORMAC programming language\" },\n    ],\n    quote: \"At that point...there was relatively little discrimination against women because programmers were very scarce. And so it didn't matter whether you had three heads.\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Diamonds,\n    coder: \"Vera Molnar\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Vera_Molnar.png\",\n    milestone: [\n      { year: 1959, event: \"Started iterating combinatorial images\" },\n      { year: 1968, event: \"Began to create algorithmic paintings based on geometric shapes and themes\" },\n    ],\n    quote: \"The machine, which is thought to be cold and inhuman, can help to realize what is most profound in a human being.\"\n  },\n]\n\nexport default DiamondCards\n","import JokerCards from './joker'\nimport SpadeCards from './spade'\nimport HeartCards from './heart'\nimport ClubCards from './club'\nimport DiamondCards from './diamond'\n\nexport default [\n  ...JokerCards,\n  ...SpadeCards,\n  ...HeartCards,\n  ...ClubCards,\n  ...DiamondCards,\n]\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst JokerCards: PokerCard[] = [\n  {\n    key: CardKey.BigJoker,\n    type: CardSuit.Jokers,\n    coder: \"大卫·海尼梅尔·汉森\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"David_Heinemeier_Hansson.jpg\",\n    milestone: [\n      { year: 2003, event: \"创造了 Ruby on Rails\" },\n    ],\n    quote: \"如果你不立即践行你的最佳创意，那么你一定会与之擦肩而过。\"\n  },\n  {\n    key: CardKey.LittleJoker,\n    type: CardSuit.Jokers,\n    coder: \"中本聪\",\n    gender: UserGender.Other,\n    picture: QINIU_CDN_URL + \"Satoshi_Nakamoto.jpg\",\n    milestone: [\n      { year: 2008, event: \"发明了区块链\" },\n      { year: 2008, event: \"设计了比特币\" },\n    ],\n    quote: \"使用基于秘钥的电子货币，资金可以安全且方便地进行交易，同时无需信任第三方中间商。\"\n  }\n]\n\nexport default JokerCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst SpadeCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Spades,\n    coder: \"埃达·洛夫莱斯\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Ada_Lovelace.jpg\",\n    milestone: [\n      { year: 1843, event: \"发明了计算机算法\" },\n      { year: 1843, event: \"编写了第一个计算机程序\" },\n    ],\n    quote: \"分析引擎不会凭空产生事务，但它可以优化我们处理事务的方式。\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Spades,\n    coder: \"林纳斯·托瓦兹\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Linus_Torvalds.jpeg\",\n    milestone: [\n      { year: 1991, event: \"创造了 Linux 操作系统\" },\n      { year: 2005, event: \"创造了 Git 版本控制系统\" },\n    ],\n    quote: \"天赋使人事半功倍。\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Spades,\n    coder: \"比雅尼·斯特劳斯特鲁普\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Bjarne_Stroustrup.jpg\",\n    milestone: [\n      { year: 1985, event: \"创造了 C++ 语言\" },\n    ],\n    quote: \"传统代码通常在实际工作和扩展方面与其建议的替代方法不同。\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Spades,\n    coder: \"帕特里夏·塞林格\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Patricia_Sellinger.jpeg\",\n    milestone: [\n      { year: 1974, event: \"帮助创造 System R 项目(SQL 的第一次实现)\" },\n    ],\n    quote: \"数据管理的精美之处在于它涵盖了所有编程语言和所有操作系统会遇到的难题。\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Spades,\n    coder: \"蒂姆·伯纳斯-李\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Tim_Berners-Lee.jpg\",\n    milestone: [\n      { year: 1991, event: \"创造了万维网\" },\n    ],\n    quote: \"Web 直到现在也没有达到我发明初期的设想，未来仍会比过去更强大。\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Spades,\n    coder: \"理查德·斯托曼\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Richard_Stallman.jpg\",\n    milestone: [\n      { year: 1983, event: \"发明了 GNU 操作系统\" },\n      { year: 1985, event: \"建立了自由软件基金会\" },\n      { year: 1985, event: \"创造了 GNU Emacs 编辑器\" },\n    ],\n    quote: \"分享很棒。配上数字技术后，分享也会很容易。\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Spades,\n    coder: \"雷蒙德·库茨魏尔\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Raymond_Kurzweil.jpg\",\n    milestone: [\n      { year: 1974, event: \"发明了 OCR(光学字符识别)\" },\n      { year: 1987, event: \"开发了首款商用文本语音合成器\" },\n    ],\n    quote: \"一旦计算机达到了人类的智力水平，它一定会更快地超过。\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Spades,\n    coder: \"肯·汤普逊\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Ken_Thompson.jpg\",\n    milestone: [\n      { year: 1969, event: \"发明了 B 语言\" },\n      { year: 1970, event: \"合作发明了 Unix 操作系统\" },\n      { year: 2009, event: \"合作发明了 Go 语言\" },\n    ],\n    quote: \"如有疑问，请使用蛮力。\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Spades,\n    coder: \"雷·汤姆林森\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Ray_Tomlinson.jpg\",\n    milestone: [\n      { year: 1971, event: \"发明了 Email\" },\n    ],\n    quote: \"我发现电子邮件基本上在按照我的设想被使用。每个人都因不同的原因使用它，也都会找到适合自己的使用方式。\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Spades,\n    coder: \"Mary Allen Wilkes\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Mary_Allen_Wilkes.jpeg\",\n    milestone: [\n      { year: 1961, event: \"为 LINC 设计了交互式操作系统 LAP6\" },\n      { year: 1965, event: \"第一个在家中建造和使用个人计算机\" },\n    ],\n    quote: \"我们有一个古朴的想法，即软件应该没有任何错误。不幸的是，这个想法从未真正被实现。\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Spades,\n    coder: \"艾兹赫尔·戴克斯特拉\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Edsger_Dijkstra.jpg\",\n    milestone: [\n      { year: 1956, event: \"发明了 Dijkstra 最短路径算法\" },\n      { year: 1965, event: \"提出了哲学家就餐问题\" },\n    ],\n    quote: \"计算机是否可以思考的问题就像潜水艇是否可以游泳的问题一样。\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Spades,\n    coder: \"道格拉斯·恩格尔巴特\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Douglas_Engelbart.jpg\",\n    milestone: [\n      { year: 1964, event: \"发明了鼠标\" },\n      { year: 1973, event: \"帮助发明了图形用户界面\" },\n    ],\n    quote: \"我们越是善于进步，也就进步得越快。\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Spades,\n    coder: \"康拉德·楚泽\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Konrad_Zuse.jpg\",\n    milestone: [\n      { year: 1938, event: \"建造了第一个二进制电脑\" },\n      { year: 1941, event: \"建造了第一个可编程数字计算机\" },\n      { year: 1945, event: \"设计了第一个高级程序设计语言\" },\n    ],\n    quote: \"你可以说我在计算上很懒惰，但因此我创造了计算机。\"\n  },\n]\n\nexport default SpadeCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst HeartCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Hearts,\n    coder: \"格蕾丝·赫柏\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Grace_Hopper.jpg\",\n    milestone: [\n      { year: 1945, event: \"首创术语“bug”\" },\n      { year: 1952, event: \"发明了编译器\" },\n      { year: 1959, event: \"合作开发了 COBOL\" },\n    ],\n    quote: \"当我们需要更强的计算能力时，解决方法不应是获得一个更厉害的计算机，而是构建一个多计算机系统并能并行操作它们。\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Hearts,\n    coder: \"吴恩达\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Andrew_Ng.jpg\",\n    milestone: [\n      { year: 2007, event: \"领导斯坦福人工智能机器人项目\" },\n      { year: 2008, event: \"领导斯坦福自治直升机项目\" },\n      { year: 2011, event: \"上线线上机器学习课程\" },\n    ],\n    quote: \"今天，我实际上很难想到一个未来几年内不会被 AI 改变的行业。\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Hearts,\n    coder: \"余国荔\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Corrinne_Yu.jpg\",\n    milestone: [\n      { year: 1990, event: \"为美国航天飞机计划编写代码\" },\n      { year: 1994, event: \"为自己创建了 3D 图形引擎\" },\n      { year: 2008, event: \"领导 Halo 游戏系列的开发\" },\n    ],\n    quote: \"我常常会抱紧我的代码——我会抓取一些代码输出日志，用几本书围着自己，握住合适的垫子，卷着毯子躺在沙发上，开始阅读和涂鸦。\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Hearts,\n    coder: \"布赖恩·福克斯\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Brian_Fox.png\",\n    milestone: [\n      { year: 1989, event: \"创造了 GNU 的 Bash Shell\" },\n      { year: 2008, event: \"合作开发了 OVC 开源投票系统\" },\n    ],\n    quote: \"我会尽量不去为了工作而工作，而会试图专注于思考我为什么要做这件事，这样才能在完成工作后体会到满足感。\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Hearts,\n    coder: \"吉多·范罗苏姆\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Guido_Van_Rossum.jpg\",\n    milestone: [\n      { year: 1990, event: \"创造了 Python 语言\" },\n    ],\n    quote: \"Python 是程序员需要多少自由度的实验。自由度太大，没有人可以阅读别人的代码；太少了，表现力受到了威胁。\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Hearts,\n    coder: \"拉里·沃尔\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Larry_Wall.jpg\",\n    milestone: [\n      { year: 1985, event: \"创建了 Git 的前身 Patch\" },\n      { year: 1987, event: \"创建了 Perl 语言\" },\n    ],\n    quote: \"我设法运行此开源项目的唯一原因是，我学会了将委托委派给其他人。\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Hearts,\n    coder: \"鲍勃·弗兰克斯顿＆丹·布里克林\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Dan_Bricklin_And_Bob_Frankston.jpg\",\n    milestone: [\n      { year: 1979, event: \"创造了第一个电子表格程序 VisiCalc\" },\n    ],\n    quote: \"在一个好的系统中，只要做平常会帮助自己的事情，就会对每个人都有帮助。——丹·布里克林\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Hearts,\n    coder: \"阿黛尔·戈德堡\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Adele_Goldberg.jpg\",\n    milestone: [\n      { year: 1973, event: \"提出用于图形用户界面的概念\" },\n      { year: 1980, event: \"合作开发了 Smalltalk-80 语言\" },\n    ],\n    quote: \"不要问你是否可以做某事，请直接思考要怎么做。\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Hearts,\n    coder: \"布莱恩·柯林汉\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Brian_Kernighan.png\",\n    milestone: [\n      { year: 1970, event: \"合作开发了 Unix 操作系统\" },\n      { year: 1972, event: \"编写了第一个 “Hello World” 程序\" },\n      { year: 1977, event: \"合作发明了 Awk 语言\" },\n    ],\n    quote: \"不要过多议论错误的代码，请重写它。\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Hearts,\n    coder: \"高德纳\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Donald_Knuth.jpg\",\n    milestone: [\n      { year: 1973, event: \"出版了《计算机编程艺术》\" },\n      { year: 1978, event: \"设计了 TeX 类型设置系统\" },\n    ],\n    quote: \"科学是我们足够了解并能解释给计算机的知识，艺术是剩下能做的一切。\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Hearts,\n    coder: \"朱迪亚·珀尔\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Judea_Pearl.png\",\n    milestone: [\n      { year: 1970, event: \"创建了人工智能的概率方法\" },\n      { year: 1985, event: \"发明了贝叶斯网络\" },\n    ],\n    quote: \"最可靠的知识需要你的亲自构建。\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Hearts,\n    coder: \"约翰·麦卡锡\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"John_McCarthy.jpg\",\n    milestone: [\n      { year: 1955, event: \"提出了术语“人工智能”\" },\n      { year: 1958, event: \"创建了 Lisp 语言\" },\n    ],\n    quote: \"每个人都需要拥有编程思维，这将会是我们与计算机说话的方式。\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Hearts,\n    coder: \"莫里斯·威尔克斯\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Maurice_Wilkes.png\",\n    milestone: [\n      { year: 1949, event: \"打造了第一台具有内部存储程序的计算机 EDSAC\" },\n    ],\n    quote: \"我一生中的大部分时间都将花在寻找自己程序中的错误上。\"\n  },\n]\n\nexport default HeartCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst ClubCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Clubs,\n    coder: \"艾达·罗兹\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Ida_Rhodes.jpeg\",\n    milestone: [\n      { year: 1940, event: \"从事于“数学表项目”\" },\n      { year: 1950, event: \"和 Betty Holberton 一起为 UNIVAC-I 设计了 C-10 语言\" },\n    ],\n    quote: \"每当有人阅读科幻小说时，我会因自己有实际经验而默默地激动。\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Clubs,\n    coder: \"布莱姆·科亨\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Bram_Cohen.jpg\",\n    milestone: [\n      { year: 2002, event: \"创造了 BitTorrent 对等协议\" },\n    ],\n    quote: \"人们会对工作白忙活而感到身心疲惫，而我只会做一些人们会实际使用的东西。\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Clubs,\n    coder: \"布兰登·艾克\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Brendan_Eich.jpg\",\n    milestone: [\n      { year: 1995, event: \"创造了 JavaScript 语言\" },\n    ],\n    quote: \"如果网络可以发展为分析出缺少的 API 并具有更好的性能，则开发人员将无需工作在网络之外。\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Clubs,\n    coder: \"索菲·威尔逊\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Sophie_Wilson.jpg\",\n    milestone: [\n      { year: 1978, event: \"设计了橡子微型计算机\" },\n      { year: 1981, event: \"开发了 BBC Basic 语言\" },\n    ],\n    quote: \"我是那种会直接表明解决方案有多明显的少数工程师，这使我成为从事 IT 工作的危险人物，但我却是一个有用的人。\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Clubs,\n    coder: \"詹姆斯·高斯林\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"James_Gosling.jpg\",\n    milestone: [\n      { year: 1995, event: \"创造了 Java 语言\" },\n    ],\n    quote: \"人们将安全性视为一个可购买的名词，但实际上这是一个像幸福一样地抽象概念。\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Clubs,\n    coder: \"比尔·乔伊\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Bill_Joy.jpg\",\n    milestone: [\n      { year: 1976, event: \"创造了 VI 编辑器\" },\n      { year: 1978, event: \"创造了 Unix 下的 C Shell\" },\n    ],\n    quote: \"我们必须鼓励我们想要的未来，而不是试图防止陷入对未来战争的恐惧。\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Clubs,\n    coder: \"斯蒂夫·沃兹尼亚克\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Steve_Wozniak.jpg\",\n    milestone: [\n      { year: 1977, event: \"设计了第一台大众市场的微型计算机 Apple II\" },\n      { year: 1987, event: \"发明了通用遥控器\" },\n    ],\n    quote: \"最后，我希望会在某处说明我设计的是一台好的计算机。\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Clubs,\n    coder: \"沃德·克莉史汀森\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Ward_Christensen.jpg\",\n    milestone: [\n      { year: 1977, event: \"开发了一种简单的文件传输协议 XMODEM\" },\n      { year: 1978, event: \"第一个公告板 CBBS 共同创始人\" },\n    ],\n    quote: \"我根据软木板和图钉类型的公告板来设计软件，并创造了术语“BBS”。\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Clubs,\n    coder: \"丹尼斯·里奇\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Dennis_Ritchie.jpg\",\n    milestone: [\n      { year: 1970, event: \"合作创建了 Unix 操作系统\" },\n      { year: 1978, event: \"设计了 C 语言\" },\n    ],\n    quote: \"Unix 基本上是一个简单的操作系统，但是你必须是个天才才能真正理解它的简单性。\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Clubs,\n    coder: \"达娜\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Dana_Ulery.jpg\",\n    milestone: [\n      { year: 1961, event: \"早期的科学计算应用先锋\" },\n      { year: 1971, event: \"建立了电子数据交换标准\" },\n    ],\n    quote: \"知识管理首先是要利用信息来提出正确的问题，这本身就是一个巨大且通常是无法识别的挑战。\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Clubs,\n    coder: \"法兰·艾伦\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Frances_Allen.jpg\",\n    milestone: [\n      { year: 1962, event: \"为最早的超级计算机之一 IBM Stretch 设计了编译器\" },\n    ],\n    quote: \"一个非常重要的步骤不仅是确定出并行性，而且是确定出有用的并行性。\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Clubs,\n    coder: \"马文·李·明斯基\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Marvin_Minsky.jpg\",\n    milestone: [\n      { year: 1951, event: \"发明了神经网络和第一台自学机器\" },\n      { year: 1963, event: \"发明了第一台头戴式图形显示器\" },\n    ],\n    quote: \"计算机并不会意识到自己在做什么，但其实大多数情况下，我们人类也一样。\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Clubs,\n    coder: \"艾伦·图灵\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Alan_Kay.png\",\n    milestone: [\n      { year: 1936, event: \"发明了图灵机\" },\n      { year: 1939, event: \"开发出可以破解纳粹加密的计算机\" },\n      { year: 1950, event: \"发明了图灵测试\" },\n    ],\n    quote: \"我们只能看到前方很短的距离，但是我们可以看到那里还有很多工作要做。\"\n  },\n]\n\nexport default ClubCards\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\nimport { QINIU_CDN_URL } from \"../../../config\"\n\nconst DiamondCards: PokerCard[] = [\n  {\n    key: CardKey.Ace,\n    type: CardSuit.Diamonds,\n    coder: \"多萝西·沃恩\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Dorothy_Vaughan.png\",\n    milestone: [\n      { year: 1943, event: \"计算出了美国太空计划的飞行轨迹\" },\n      { year: 1961, event: \"教员工行 FORTRAN 编程\" },\n    ],\n    quote: \"我改变了我所能做的，并克服了做不了的。\"\n  },\n  {\n    key: CardKey.Two,\n    type: CardSuit.Diamonds,\n    coder: \"帕瑞萨·大不里士\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Parisa_Tabriz.jpg\",\n    milestone: [\n      { year: 2016, event: \"监督 Google Chrome 的安全性\" },\n      { year: 2018, event: \"成立了安全倡导者会议\" },\n    ],\n    quote: \"始终如一地编写安全代码要比指出不安全代码要困难得多。\"\n  },\n  {\n    key: CardKey.Three,\n    type: CardSuit.Diamonds,\n    coder: \"松本行弘\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Yukihiro_Matsumoto.jpeg\",\n    milestone: [\n      { year: 1995, event: \"设计了 Ruby 语言\" },\n    ],\n    quote: \"我相信一致性和正交性是设计的工具，而不是设计的主要目标。\"\n  },\n  {\n    key: CardKey.Four,\n    type: CardSuit.Diamonds,\n    coder: \"史蒂芬·沃尔夫勒姆\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Stephen_Wolfram.jpg\",\n    milestone: [\n      { year: 1986, event: \"开发了计算机代数系统 Mathematica\" },\n      { year: 1988, event: \"开发了应答引擎 Wolfram Alpha\" },\n    ],\n    quote: \"在计算宇宙中的某个地方，可能存在着我们生存的这个物理宇宙吗？\"\n  },\n  {\n    key: CardKey.Five,\n    type: CardSuit.Diamonds,\n    coder: \"阿列克谢·帕基特诺夫\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Alexey_Pajitnov.jpg\",\n    milestone: [\n      { year: 1984, event: \"设计并开发了俄罗斯方块\" },\n    ],\n    quote: \"俄罗斯方块在打破普通人在计算机面前的束缚方面起着非常重要的作用。\"\n  },\n  {\n    key: CardKey.Six,\n    type: CardSuit.Diamonds,\n    coder: \"菲尔·齐默尔曼\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Phil_Zimmermann.jpg\",\n    milestone: [\n      { year: 1991, event: \"创建了公共密钥加密程序 Pretty Good Privacy\" },\n    ],\n    quote: \"如果隐私权被禁止，那只有非法者才具有隐私权。\"\n  },\n  {\n    key: CardKey.Seven,\n    type: CardSuit.Diamonds,\n    coder: \"拉迪亚·珀尔曼\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Radia_Perlman.jpg\",\n    milestone: [\n      { year: 1985, event: \"设计了以太网的生成树协议\" },\n    ],\n    quote: \"从找到正确的问题开始解决问题。\"\n  },\n  {\n    key: CardKey.Eight,\n    type: CardSuit.Diamonds,\n    coder: \"姚期智\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Andrew_Yao.jpeg\",\n    milestone: [\n      { year: 1997, event: \"用极小定理提出姚的极小极大原理\" },\n      { year: 1979, event: \"引入通信复杂性理论\" },\n      { year: 1982, event: \"提出了姚的百万富翁问题\" },\n    ],\n    quote: \"如果你有什么想法，请继续进行。即使你没有做到最后，也可能会比其他人做得更好。\"\n  },\n  {\n    key: CardKey.Nine,\n    type: CardSuit.Diamonds,\n    coder: \"温特·瑟夫 & 鲍勃·卡恩\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Vint_Cerf_And_Bob_Kahn.png\",\n    milestone: [\n      { year: 1983, event: \"发明了传输控制协议\" },\n      { year: 1983, event: \"发明了互联网协议\" },\n    ],\n    quote: \"学习技术无关年龄，但你的心态必须年轻。 - 温特·瑟夫\"\n  },\n  {\n    key: CardKey.Ten,\n    type: CardSuit.Diamonds,\n    coder: \"艾伦·凯\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Alan_Kay.png\",\n    milestone: [\n      { year: 1970, event: \"率先使用了面向对象程序设计\" },\n    ],\n    quote: \"预测未来的最好方法是引领未来。\"\n  },\n  {\n    key: CardKey.Jack,\n    type: CardSuit.Diamonds,\n    coder: \"玛格丽特·汉密尔顿\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Margaret_Hamilton.jpg\",\n    milestone: [\n      { year: 1969, event: \"负责阿波罗登月任务的软件开发\" },\n    ],\n    quote: \"回顾过去，我们是世界上最幸运的人。我们别无选择，只能奋勇直上。\"\n  },\n  {\n    key: CardKey.Queen,\n    type: CardSuit.Diamonds,\n    coder: \"让·萨米特\",\n    gender: UserGender.Female,\n    picture: QINIU_CDN_URL + \"Jean_E._Sammet.png\",\n    milestone: [\n      { year: 1959, event: \"合作开发了 COBOL 语言\" },\n      { year: 1962, event: \"开发了 FORMAC 语言\" },\n    ],\n    quote: \"那时……由于程序员非常稀少，对女性的歧视相对较少。 因此，你是否拥有三个头都没关系。\"\n  },\n  {\n    key: CardKey.King,\n    type: CardSuit.Diamonds,\n    coder: \"维拉·莫尔纳\",\n    gender: UserGender.Male,\n    picture: QINIU_CDN_URL + \"Vera_Molnar.png\",\n    milestone: [\n      { year: 1959, event: \"开始迭代组合图像\" },\n      { year: 1968, event: \"开始基于几何形状和主题创建算法绘画\" },\n    ],\n    quote: \"机器被认为是冷的和不人道的，但可以帮助人类探索最深奥的东西。\"\n  },\n]\n\nexport default DiamondCards\n","import JokerCards from './joker'\nimport SpadeCards from './spade'\nimport HeartCards from './heart'\nimport ClubCards from './club'\nimport DiamondCards from './diamond'\n\nexport default [\n  ...JokerCards,\n  ...SpadeCards,\n  ...HeartCards,\n  ...ClubCards,\n  ...DiamondCards,\n]\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst JokerCards: PokerCard[] = [\n  {\n    key: CardKey.BigJoker,\n    type: CardSuit.Jokers,\n    coder: \"BigJoker\",\n    gender: UserGender.Male,\n    picture: \"http://qiniu.ningo.cloud/hylerrix.jpeg\",\n    milestone: [\n      { year: 2020, event: \"NingoWood BigJoker\" },\n    ],\n    quote: \"quote BigJoker.\"\n  },\n  {\n    key: CardKey.LittleJoker,\n    type: CardSuit.Jokers,\n    coder: \"LittleJoker\",\n    gender: UserGender.Other,\n    picture: \"http://qiniu.ningo.cloud/hylerrix.jpeg\",\n    milestone: [\n      { year: 2020, event: \"NingoWood LittleJoker\" },\n    ],\n    quote: \"quote LittleJoker.\"\n  }\n]\n\nexport default JokerCards\n","import JokerCards from './joker'\n\nexport default [\n  ...JokerCards,\n]\n","import { PokerCard, CardKey, CardSuit, UserGender } from \"../../../interfaces\"\n\nconst JokerCards: PokerCard[] = [\n  {\n    key: CardKey.BigJoker,\n    type: CardSuit.Jokers,\n    coder: \"大王\",\n    gender: UserGender.Male,\n    picture: \"http://qiniu.ningo.cloud/hylerrix.jpeg\",\n    milestone: [\n      { year: 2020, event: \"凝果屋大王\" },\n    ],\n    quote: \"大王名言\"\n  },\n  {\n    key: CardKey.LittleJoker,\n    type: CardSuit.Jokers,\n    coder: \"小王\",\n    gender: UserGender.Other,\n    picture: \"http://qiniu.ningo.cloud/hylerrix.jpeg\",\n    milestone: [\n      { year: 2020, event: \"凝果屋小王\" },\n    ],\n    quote: \"小王名言.\"\n  }\n]\n\nexport default JokerCards","import JokerCards from './joker'\n\nexport default [\n  ...JokerCards,\n]\n","import pokerCoder from './poker-coder/en'\nimport pokerCoderCn from './poker-coder/cn'\nimport pokerSecond from './poker-second/en'\nimport pokerSecondCn from './poker-second/cn'\nimport { EN, CN, POKER_CODER, POKER_SECOND } from '../interfaces'\n\nexport const loadPokerList = (lng: string, collection :string) => {\n  return collection === POKER_CODER\n    ? loadPokerCoder(lng)\n    : collection === POKER_SECOND\n      ? loadPokerSecond(lng)\n      : loadPokerCoder(lng)\n}\n\nconst loadPokerCoderList = () => pokerCoder\nconst loadPokerCoderListCn = () => pokerCoderCn\nexport const loadPokerCoder = (lng: string) => {\n  return lng === EN\n    ? loadPokerCoderList()\n    : lng === CN\n      ? loadPokerCoderListCn()\n      : loadPokerCoderList()\n}\n\nconst loadPokerSecondList = () => pokerSecond\nconst loadPokerSecondListCn = () => pokerSecondCn\nexport const loadPokerSecond = (lng: string) => {\n  return lng === EN\n    ? loadPokerSecondList()\n    : lng === CN\n      ? loadPokerSecondListCn()\n      : loadPokerSecondList()\n}\n\n","import { REQUEST_POKER_CARD_ACTION, RECEIVE_POKER_CARD_ACTION, SET_COLLECTION_ACTION } from './types'\nimport { PokerCard } from '../../interfaces'\nimport { Dispatch } from 'redux'\nimport { getPoker } from '../../api'\n\nexport const requestPoker = () => {\n  return {\n    type: REQUEST_POKER_CARD_ACTION,\n  }\n}\n\nexport const receivePoker = (list: PokerCard[]) => {\n  return {\n    type: RECEIVE_POKER_CARD_ACTION,\n    payload: { list: list }\n  }\n}\n\nexport const fetchPoker = (lng: string, collection: string) => (dispatch: Dispatch) => {\n  dispatch(requestPoker())\n  return getPoker(lng, collection)\n    .then(({ data }) => dispatch(receivePoker(data)))\n    .catch(() => dispatch(receivePoker([])))\n}\n\nexport const setCollection = (collection: string) => {\n  return {\n    type: SET_COLLECTION_ACTION,\n    payload: { collection }\n  }\n}\n\nexport const toggleCollection = (collection: string) => (dispatch: Dispatch) => {\n  return dispatch(setCollection(collection))\n}","import { PokerCard } from '../../interfaces'\n\nexport interface PokerCardState {\n  collection: string,\n  list: PokerCard[],\n  loading: boolean\n}\n\nexport const REQUEST_POKER_CARD_ACTION = 'REQUEST_POKER_CARD_ACTION'\n\nexport interface requestPokerCardAction {\n  type: typeof REQUEST_POKER_CARD_ACTION\n}\n\nexport const RECEIVE_POKER_CARD_ACTION = 'RECEIVE_POKER_CARD_ACTION'\n\nexport interface receivePokerCardAction {\n  type: typeof RECEIVE_POKER_CARD_ACTION\n  payload: { list: PokerCard[] }\n}\n\nexport const SET_COLLECTION_ACTION = 'REQUEST_TOGGLE_COLLECTION_ACTION'\n\nexport interface setCollectionAction {\n  type: typeof SET_COLLECTION_ACTION,\n  payload: { collection: string }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Button from '@material-ui/core/Button'\nimport { AppState } from '../../../store'\nimport { I18nState } from '../../../store/i18n/types'\nimport { toggleLanguage } from '../../../store/i18n/actions'\nimport { toggleCollection } from '../../../store/poker/actions'\nimport { EN, CN, POKER_CODER, POKER_SECOND } from '../../../interfaces'\n\ntype ToolboxContainerProps = { i18nReducer: I18nState } & { toggleLanguage: (lng: string) => void } & { toggleCollection: (collection: string) => void }\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gridRoot: {\n      margin: 0,\n      padding: '0',\n      width: '100%',\n      flexGrow: 1,\n      [theme.breakpoints.up('xs')]: {\n        padding: '0 8px',\n      },\n      [theme.breakpoints.up('sm')]: {\n        padding: '0 16px',\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: '0 24px',\n      },\n      [theme.breakpoints.up('lg')]: {\n        padding: '0 32px',\n      },\n    },\n    btnRoot: {\n      '& > *': {\n        margin: theme.spacing(1),\n      },\n    },\n  }),\n)\n\nconst WrappedToolboxContainer: React.FC<ToolboxContainerProps> = ({ toggleLanguage, toggleCollection }) => {\n  const classes = useStyles()\n  const { t, i18n } = useTranslation()\n\n  const changeCollection = (collection: string) => {\n    toggleCollection(collection)\n  }\n\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng)\n    toggleLanguage(lng)\n  }\n\n  return (\n    <Grid\n      container\n      className={classes.gridRoot}\n      spacing={1}\n    >\n      <Grid container item xs={12}>\n        <div className={classes.btnRoot}>\n          <Button onClick={() => changeLanguage(EN)} variant=\"contained\" color=\"primary\">\n            {t('Language.EN')}\n          </Button>\n          <Button onClick={() => changeLanguage(CN)} variant=\"contained\" color=\"primary\">\n            {t('Language.CN')}\n          </Button>\n        </div>\n      </Grid>\n      <Grid container item xs={12}>\n        <div className={classes.btnRoot}>\n          <Button onClick={() => changeCollection(POKER_CODER)} variant=\"contained\" color=\"primary\">\n            {t('Collection.POKER_CODER')}\n          </Button>\n          <Button onClick={() => changeCollection(POKER_SECOND)} variant=\"contained\" color=\"primary\">\n            {t('Collection.POKER_SECOND')}\n          </Button>\n        </div>\n      </Grid>\n    </Grid>\n  )\n}\n\nconst ToolboxContainer = connect((\n  { i18nReducer }: AppState) => ({ i18nReducer }),\n  { toggleLanguage, toggleCollection },\n)(WrappedToolboxContainer)\n\nexport default ToolboxContainer","import { Dispatch } from 'redux'\nimport { SET_LANGUAGE_ACTION } from './types'\n\nexport const setLanguage = (lng: string) => {\n  return {\n    type: SET_LANGUAGE_ACTION,\n    payload: { lng }\n  }\n}\n\nexport const toggleLanguage = (lng: string) => (dispatch: Dispatch) => {\n  return dispatch(setLanguage(lng))\n}\n","export interface I18nState {\n  lng: string\n}\n\nexport const SET_LANGUAGE_ACTION = 'SET_LANGUAGE_ACTION'\n\nexport interface setLanguageAction {\n  type: typeof SET_LANGUAGE_ACTION,\n  payload: { lng: string }\n}\n","import React from 'react'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport { Alert, AlertTitle } from '@material-ui/lab'\nimport Grid from '@material-ui/core/Grid'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gridRoot: {\n      margin: 0,\n      padding: '0',\n      width: '100%',\n      flexGrow: 1,\n      [theme.breakpoints.up('xs')]: {\n        padding: '0 8px',\n      },\n      [theme.breakpoints.up('sm')]: {\n        padding: '0 16px',\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: '0 24px',\n      },\n      [theme.breakpoints.up('lg')]: {\n        padding: '0 32px',\n      },\n    },\n    alertRoot: {\n      width: '100%',\n    },\n  }),\n)\n\nconst BillboardContainer: React.FC = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <Grid container className={classes.gridRoot}>\n      <Alert severity=\"warning\" className={classes.alertRoot}>\n        <AlertTitle>{t('billboard.appWarningTitle')}</AlertTitle>\n        {t('billboard.appWarningBody')}\n      </Alert>\n    </Grid>\n  )\n}\n\nexport default BillboardContainer","import React from \"react\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    svg: {\n      transform: 'rotate(180deg)',\n    },\n  }),\n)\n\nconst CardIconSvgSwitcher: React.FC<{cardType: string, cardKey: string}> = ({ cardType, cardKey }) => {\n  const renderSvg = () => {\n    switch(cardType) {\n      case 'Spades':\n        return <SpadesIconSvg />\n      case 'Hearts':\n        return <HeartsIconSvg />\n      case 'Clubs':\n        return <ClubsIconSvg />\n      case 'Diamonds':\n        return <DiamondsIconSvg />\n      case 'Jokers':\n        return (cardKey === 'BigJoker')\n          ? <BigJokersIconSvg />\n          : <LittleJokersIconSvg />\n      default:\n        return <div>{cardKey}</div>\n    }\n  }\n\n  return (\n    <span>{ renderSvg() }</span>\n  )\n}\n\nconst BigJokersIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#e74c3c\">\n          <path d=\"M136.36263,62.82031c0.89583,5.03906 5.26302,8.84635 10.55403,8.84635c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.9349 -4.8151,-10.75 -10.75,-10.75c-3.30338,0 -6.21484,1.51172 -8.17448,3.83528c-6.77474,-3.49935 -16.54492,-5.51497 -29.75847,-0.83984c-9.43424,3.33138 -15.87304,9.37826 -20.21224,16.85286c-3.55534,-11.8138 -9.1543,-20.85612 -16.93685,-26.81901c-14.19336,-10.88997 -29.84245,-7.30664 -30.51433,-7.16667l-5.68294,1.42774c-0.92383,-5.01107 -5.29101,-8.79037 -10.55403,-8.79037c-5.9349,0 -10.75,4.8151 -10.75,10.75c0,5.9349 4.8151,10.75 10.75,10.75c3.91927,0 7.27865,-2.09961 9.18229,-5.20703c2.71549,1.0638 5.23503,2.23958 6.49479,3.30338c1.87565,1.56771 2.1836,2.6875 3.63933,7.16667c1.84765,5.68294 2.6875,19.42839 -12.56967,47.56315c-5.26302,9.71419 -5.9069,21.94792 -1.73567,32.72591c0.08399,0.22396 0.22396,0.41992 0.30794,0.61589c-5.03906,0.89583 -8.90235,5.26302 -8.90235,10.58203c0,5.9349 4.8151,10.75 10.75,10.75h107.5c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.79492 -4.61914,-10.49805 -10.35807,-10.72201c3.80729,-11.08594 2.77148,-26.875 -7.11068,-40.78841c-19.03646,-26.84701 -7.97851,-32.30599 3.33138,-32.58594zM44.42774,109.82357c13.38151,-24.66341 18.02865,-44.20378 13.82942,-58.14518c1.65169,0.72786 3.35938,1.70768 5.01107,3.02344c9.57422,7.5026 14.97722,23.34765 15.5651,45.63151v35.83333h-32.16601c-1.23177,-1.56771 -2.35156,-3.44336 -3.19141,-5.62695c-2.6875,-6.91472 -2.32356,-14.64128 0.95183,-20.71615z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst LittleJokersIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#666666\">\n          <path d=\"M136.36263,62.82031c0.89583,5.03906 5.26302,8.84635 10.55403,8.84635c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.9349 -4.8151,-10.75 -10.75,-10.75c-3.30338,0 -6.21484,1.51172 -8.17448,3.83528c-6.77474,-3.49935 -16.54492,-5.51497 -29.75847,-0.83984c-9.43424,3.33138 -15.87304,9.37826 -20.21224,16.85286c-3.55534,-11.8138 -9.1543,-20.85612 -16.93685,-26.81901c-14.19336,-10.88997 -29.84245,-7.30664 -30.51433,-7.16667l-5.68294,1.42774c-0.92383,-5.01107 -5.29101,-8.79037 -10.55403,-8.79037c-5.9349,0 -10.75,4.8151 -10.75,10.75c0,5.9349 4.8151,10.75 10.75,10.75c3.91927,0 7.27865,-2.09961 9.18229,-5.20703c2.71549,1.0638 5.23503,2.23958 6.49479,3.30338c1.87565,1.56771 2.1836,2.6875 3.63933,7.16667c1.84765,5.68294 2.6875,19.42839 -12.56967,47.56315c-5.26302,9.71419 -5.9069,21.94792 -1.73567,32.72591c0.08399,0.22396 0.22396,0.41992 0.30794,0.61589c-5.03906,0.89583 -8.90235,5.26302 -8.90235,10.58203c0,5.9349 4.8151,10.75 10.75,10.75h107.5c5.9349,0 10.75,-4.8151 10.75,-10.75c0,-5.79492 -4.61914,-10.49805 -10.35807,-10.72201c3.80729,-11.08594 2.77148,-26.875 -7.11068,-40.78841c-19.03646,-26.84701 -7.97851,-32.30599 3.33138,-32.58594zM44.42774,109.82357c13.38151,-24.66341 18.02865,-44.20378 13.82942,-58.14518c1.65169,0.72786 3.35938,1.70768 5.01107,3.02344c9.57422,7.5026 14.97722,23.34765 15.5651,45.63151v35.83333h-32.16601c-1.23177,-1.56771 -2.35156,-3.44336 -3.19141,-5.62695c-2.6875,-6.91472 -2.32356,-14.64128 0.95183,-20.71615z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst SpadesIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#1abc9c\">\n          <path d=\"M86,14.33333c0,0 -64.5,50.95052 -64.5,79.61719c0,19.12044 16.125,35.04948 35.4694,35.04948c9.54622,0 16.6569,-4.36719 21.86393,-7.16667l-16.32097,25.47526c-2.37956,4.75911 1.0918,10.35807 6.41081,10.35807h34.15365c5.31901,0 8.79036,-5.59896 6.41081,-10.35807l-16.32097,-25.47526c4.78711,2.51953 11.42188,7.16667 21.86393,7.16667c19.3444,0 35.4694,-15.92903 35.4694,-35.04948c0,-28.66667 -64.5,-79.61719 -64.5,-79.61719z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst HeartsIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#e74c3c\">\n          <path d=\"M86,152.38125l-2.19031,-1.81406c-3.44,-2.84875 -8.0625,-5.99312 -13.39719,-9.63469c-21.19094,-14.45875 -53.2125,-36.30812 -53.2125,-71.15156c0,-21.40594 17.53594,-38.82094 39.08969,-38.82094c11.52938,0 22.31969,5.01219 29.71031,13.61219c7.39063,-8.6 18.19438,-13.61219 29.71031,-13.61219c21.55375,0 39.08969,17.415 39.08969,38.82094c0,34.84344 -32.02156,56.69281 -53.2125,71.15156c-5.34812,3.64156 -9.95719,6.78594 -13.39719,9.63469z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst ClubsIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#1abc9c\">\n          <path d=\"M129,64.5c-8.17448,0 -21.30403,9.57422 -32.08203,18.84049c8.11849,-13.35351 17.74869,-31.1582 17.74869,-40.34049c0,-15.84505 -12.82161,-28.66667 -28.66667,-28.66667c-15.84505,0 -28.66667,12.82162 -28.66667,28.66667c0,9.18229 9.63021,26.98698 17.7487,40.34049c-10.778,-9.26627 -23.90756,-18.84049 -32.08203,-18.84049c-15.84505,0 -28.66667,12.82162 -28.66667,28.66667c0,15.84506 12.82162,28.66667 28.66667,28.66667c8.34245,0 21.77995,-5.96289 32.66992,-11.58984c5.96289,-2.07162 3.16341,4.42317 3.16341,4.42317l-16.32097,32.64193c-2.37956,4.75911 1.0918,10.35807 6.41081,10.35807h34.15365c5.31901,0 8.79036,-5.59896 6.41081,-10.35807l-16.32097,-32.64193c0,0 -2.35156,-6.60677 3.16341,-4.42317c10.88998,5.62695 24.32748,11.58984 32.66992,11.58984c15.84506,0 28.66667,-12.82161 28.66667,-28.66667c0,-15.84505 -12.82161,-28.66667 -28.66667,-28.66667z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nconst DiamondsIconSvg: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\" y=\"0px\"\n      width=\"30\" height=\"30\"\n      viewBox=\"0 0 172 172\"\n      style={{fill: '#000000'}}\n      className={classes.svg}\n    >\n      <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" style={{mixBlendMode: 'normal'}}>\n        <path d=\"M0,172v-172h172v172z\" fill=\"none\"></path>\n        <g fill=\"#e74c3c\">\n          <path d=\"M79.92513,154.58724l-47.8711,-59.18099c-4.50716,-5.57097 -4.50716,-13.46549 0,-19.03646l47.8711,-59.18099c3.10742,-3.80729 8.95833,-3.80729 12.03776,0l47.89909,59.18099c4.50716,5.57097 4.50716,13.46549 0,19.03646l-47.89909,59.18099c-3.07942,3.80729 -8.93033,3.80729 -12.03776,0z\"></path>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default CardIconSvgSwitcher\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { AppState } from '../store'\nimport { I18nState } from '../store/i18n/types'\nimport { fetchPoker } from '../store/poker/actions'\nimport { PokerCardState } from '../store/poker/types'\nimport PokerItem from './poker-item'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    gridRoot: {\n      margin: 0,\n      padding: '0',\n      width: '100%',\n      flexGrow: 1,\n      [theme.breakpoints.up('xs')]: {\n        padding: '0 8px',\n      },\n      [theme.breakpoints.up('sm')]: {\n        padding: '0 16px',\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: '0 24px',\n      },\n      [theme.breakpoints.up('lg')]: {\n        padding: '0 32px',\n      },\n    },\n    gridItem: {\n      // cursor: 'pointer',\n      // 'box-shadow': '0 2px 12px 0 rgba(0, 0, 0, .1)',\n      // 'border-radius': '5px',\n      // transform: 'scale(.8) translateX(4%) rotateZ(calc(-1 * (11 * 1deg)))',\n      // '&:hover': {\n      //   'box-shadow': '0 2px 12px 0 #B8B8B8',\n      //   // transform: 'scale(.8) translateX(4%)',\n      // },\n    },\n  }),\n)\n\ntype PokerContainerProps = { i18nReducer: I18nState } & { pokerReducer: PokerCardState } & { fetchPoker: (lng: string, collection: string) => void }\n\nconst WrappedPokerContainer: React.FC<PokerContainerProps> = ({ i18nReducer, pokerReducer, fetchPoker }) => {\n  const classes = useStyles()\n\n  useEffect(() => {\n    fetchPoker(i18nReducer.lng, pokerReducer.collection)\n  }, [i18nReducer.lng, pokerReducer.collection])\n\n  return (\n    <Grid\n      container\n      className={classes.gridRoot}\n      spacing={1}\n    >\n      {pokerReducer.list.map((poker, index) => (\n        <Grid\n          container\n          alignItems=\"center\"\n          item xs={12} sm={6} md={3}\n          className={classes.gridItem}\n          key={index}\n        >\n          <PokerItem poker={poker} />\n        </Grid>\n      ))}\n    </Grid>\n  )\n}\n\nconst PokerContainer = connect((\n  { i18nReducer, pokerReducer }: AppState) => ({ i18nReducer, pokerReducer }),\n  { fetchPoker },\n)(WrappedPokerContainer)\n\nexport default (PokerContainer)\n","import { loadPokerList } from \"../poker\"\nimport { PokerCard } from \"../interfaces\"\nimport { AppServerResponseData } from '../interfaces/commons'\n\nexport const getPoker = (lng: string, collection: string) => Promise.resolve<AppServerResponseData<PokerCard[]>>({\n  success: true,\n  data: loadPokerList(lng, collection),\n})\n","import React from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport ToolboxContainer from './toolbox'\nimport BillboardContainer from './billboard'\nimport PokerContainer from '../../components/poker-container'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: '16px 0',\n      [theme.breakpoints.up('sm')]: {\n        padding: '24px 0',\n      },\n      [theme.breakpoints.up('md')]: {\n        padding: '32px 0',\n      },\n    },\n  }),\n)\n\nconst AppDashboard: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <Container className={classes.root}>\n      <BillboardContainer />\n      <ToolboxContainer />\n      <PokerContainer />\n    </Container>\n  )\n}\n\nexport default AppDashboard\n","import React, { Suspense } from 'react'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\nimport GithubCorner from '../components/github-corner'\nimport AppDashboard from './app-dashboard'\nimport './App.css'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      fontSize: '12px',\n    },\n  }),\n)\n\nconst App: React.FC = () => {\n  const classes = useStyles()\n\n  return (\n    <div className={ classes.root }>\n      <Suspense fallback=\"loading\">\n        <GithubCorner />\n        <AppDashboard />\n      </Suspense>\n    </div>\n  )\n}\n\nexport default App\n","import { I18nState, SET_LANGUAGE_ACTION, setLanguageAction } from './types'\n\nconst initialState = (): I18nState => {\n  return {\n    lng: 'en',\n  }\n}\n\ntype ToggleLanguageAction = setLanguageAction\n\nconst i18nReducer = (state = initialState(), actions: ToggleLanguageAction): I18nState => {\n  switch (actions.type) {\n    case SET_LANGUAGE_ACTION:\n      return { ...state, lng: actions.payload.lng }\n    default:\n      return state\n  }\n}\n\nexport default i18nReducer\n","import { \n  PokerCardState,\n  REQUEST_POKER_CARD_ACTION, requestPokerCardAction,\n  RECEIVE_POKER_CARD_ACTION, receivePokerCardAction,\n  SET_COLLECTION_ACTION, setCollectionAction\n} from './types'\n\nconst initialState = (): PokerCardState => {\n  return {\n    collection: '',\n    list: [],\n    loading: false,\n  }\n}\n\ntype PokerCardAction = requestPokerCardAction | receivePokerCardAction | setCollectionAction\n\nconst pokerReducer = (state = initialState(), actions: PokerCardAction): PokerCardState => {\n  switch (actions.type) {\n    case REQUEST_POKER_CARD_ACTION:\n      return { ...state, loading: true }\n    case RECEIVE_POKER_CARD_ACTION:\n      return { ...state, loading: false, list: actions.payload.list }\n    case SET_COLLECTION_ACTION:\n      return { ...state, collection: actions.payload.collection }\n    default:\n      return state\n  }\n}\n\nexport default pokerReducer\n","import { combineReducers, applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport i18nReducer from './i18n/reducers'\nimport pokerReducer from './poker/reducers'\n\nconst rootReducer = combineReducers({\n  i18nReducer: i18nReducer,\n  pokerReducer: pokerReducer,\n})\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore() {\n  const middleWares = [\n    thunkMiddleware,\n    loggerMiddleware,\n  ]\n  const middleWareEnhancer = applyMiddleware(...middleWares)\n\n  return createStore(\n    rootReducer,\n    composeWithDevTools(middleWareEnhancer),\n  )\n}\n\nexport type AppState = ReturnType<typeof rootReducer>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { AppContainer } from 'react-hot-loader'\nimport './config/i18n'\nimport './index.css'\nimport App from './views/App'\nimport configureStore from './store'\nimport * as serviceWorker from './serviceWorker'\n\nexport const store = configureStore()\n\nReactDOM.render(\n  <AppContainer>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </AppContainer>\n  ,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}